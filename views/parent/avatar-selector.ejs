<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>选择头像 - 小道德</title>
    <link href="<%=process.env.CDN_BOOTSTRAP%>" rel="stylesheet">
    <style>
        .avatar-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
            gap: 15px;
            margin: 20px 0;
        }
        
        .avatar-item {
            text-align: center;
            padding: 10px;
            border: 2px solid transparent;
            border-radius: 10px;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        
        .avatar-item:hover {
            border-color: #007bff;
            background-color: #f8f9fa;
        }
        
        .avatar-item.selected {
            border-color: #28a745;
            background-color: #d4edda;
        }
        
        .avatar-img {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            margin-bottom: 5px;
            border: 2px solid #ddd;
        }
        
        .avatar-set-tabs {
            border-bottom: 1px solid #dee2e6;
            margin-bottom: 20px;
        }
        
        .avatar-set-tab {
            display: inline-block;
            padding: 10px 20px;
            background: none;
            border: none;
            border-bottom: 3px solid transparent;
            cursor: pointer;
            color: #6c757d;
            font-weight: 500;
        }
        
        .avatar-set-tab.active {
            border-bottom-color: #007bff;
            color: #007bff;
        }
        
        .refresh-btn {
            margin-left: 10px;
            font-size: 0.8em;
        }
    </style>
</head>
<body>
    <div class="container mt-4">
        <div class="row justify-content-center">
            <div class="col-md-10">
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">
                            <i class="fas fa-user-circle me-2"></i>
                            为 <span class="text-primary"><%= child.name %></span> 选择头像
                        </h5>
                    </div>
                    <div class="card-body">
                        <!-- 头像套装选项卡 -->
                        <div class="avatar-set-tabs" id="avatarSetTabs">
                            <!-- 动态加载 -->
                        </div>
                        
                        <!-- 头像网格 -->
                        <div class="avatar-grid" id="avatarGrid">
                            <!-- 动态加载 -->
                        </div>
                        
                        <!-- 操作按钮 -->
                        <div class="d-flex justify-content-between mt-4">
                            <a href="/parent/dashboard" class="btn btn-secondary">
                                <i class="fas fa-arrow-left me-2"></i>返回
                            </a>
                            <button id="saveAvatar" class="btn btn-primary" disabled>
                                <i class="fas fa-save me-2"></i>保存头像
                            </button>
                        </div>
                        
                        <!-- 当前选择的头像预览 -->
                        <div class="mt-3 text-center" id="selectedPreview" style="display: none;">
                            <p class="text-muted">当前选择：</p>
                            <img id="selectedAvatarImg" src="" alt="选择的头像" class="avatar-img">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        let currentChildId = <%= child.id %>;
        let currentAvatarConfig = <%= child.avatar_config_id || 'null' %>;
        let selectedAvatarConfig = null;
        let avatarSets = [];

        // 页面加载完成后初始化
        document.addEventListener('DOMContentLoaded', function() {
            loadAvatarSets();
        });

        // 加载头像套装
        async function loadAvatarSets() {
            try {
                const response = await fetch('/api/avatar/sets');
                avatarSets = await response.json();
                
                renderAvatarSetTabs();
                if (avatarSets.length > 0) {
                    showAvatarSet(avatarSets[0].id);
                }
            } catch (error) {
                console.error('加载头像套装失败:', error);
                alert('加载头像套装失败，请刷新页面重试');
            }
        }

        // 渲染头像套装选项卡
        function renderAvatarSetTabs() {
            const tabsContainer = document.getElementById('avatarSetTabs');
            tabsContainer.innerHTML = '';

            avatarSets.forEach((set, index) => {
                const tab = document.createElement('button');
                tab.className = `avatar-set-tab ${index === 0 ? 'active' : ''}`;
                tab.innerHTML = `
                    ${set.name}
                    <button class="btn btn-sm btn-outline-secondary refresh-btn" onclick="refreshAvatarSet(${set.id}, event)">
                        <i class="fas fa-sync-alt"></i>
                    </button>
                `;
                tab.onclick = () => showAvatarSet(set.id);
                tabsContainer.appendChild(tab);
            });
        }

        // 显示特定套装的头像
        async function showAvatarSet(setId) {
            try {
                // 更新选项卡状态
                document.querySelectorAll('.avatar-set-tab').forEach((tab, index) => {
                    tab.classList.remove('active');
                    if (avatarSets[index] && avatarSets[index].id === setId) {
                        tab.classList.add('active');
                    }
                });

                // 加载头像配置
                const response = await fetch(`/api/avatar/sets/${setId}/configs`);
                const configs = await response.json();
                
                renderAvatarGrid(configs);
            } catch (error) {
                console.error('加载头像配置失败:', error);
                alert('加载头像配置失败');
            }
        }

        // 渲染头像网格
        function renderAvatarGrid(configs) {
            const grid = document.getElementById('avatarGrid');
            grid.innerHTML = '';

            configs.forEach(config => {
                const item = document.createElement('div');
                item.className = `avatar-item ${config.id === currentAvatarConfig ? 'selected' : ''}`;
                item.innerHTML = `
                    <img src="${config.preview_url}" alt="头像 ${config.avatar_index}" class="avatar-img">
                    <div class="small">头像 ${config.avatar_index + 1}</div>
                `;
                item.onclick = (e) => selectAvatar(config, e.currentTarget);
                grid.appendChild(item);
            });
        }

        // 选择头像
        function selectAvatar(config, element) {
            // 移除之前的选择
            document.querySelectorAll('.avatar-item').forEach(item => {
                item.classList.remove('selected');
            });

            // 选择当前项
            if (element) {
                element.classList.add('selected');
            } else {
                // 如果没有传递元素，通过配置ID查找
                document.querySelectorAll('.avatar-item').forEach(item => {
                    const img = item.querySelector('img');
                    if (img && img.alt.includes(config.avatar_index)) {
                        item.classList.add('selected');
                    }
                });
            }
            selectedAvatarConfig = config;

            // 显示预览
            const preview = document.getElementById('selectedPreview');
            const previewImg = document.getElementById('selectedAvatarImg');
            previewImg.src = config.preview_url;
            preview.style.display = 'block';

            // 启用保存按钮
            document.getElementById('saveAvatar').disabled = false;
        }

        // 保存头像
        document.getElementById('saveAvatar').onclick = async function() {
            if (!selectedAvatarConfig) {
                alert('请先选择一个头像');
                return;
            }

            try {
                const response = await fetch(`/api/avatar/children/${currentChildId}/avatar`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        avatar_config_id: selectedAvatarConfig.id
                    })
                });

                if (response.ok) {
                    alert('头像保存成功！');
                    window.location.href = '/parent/dashboard';
                } else {
                    const error = await response.json();
                    alert('保存失败: ' + error.error);
                }
            } catch (error) {
                console.error('保存头像失败:', error);
                alert('保存头像失败，请重试');
            }
        };

        // 刷新头像套装
        async function refreshAvatarSet(setId, event) {
            event.stopPropagation();
            
            if (!confirm('确定要刷新这个头像套装吗？这将生成新的头像选项。')) {
                return;
            }

            try {
                const response = await fetch(`/api/avatar/sets/${setId}/refresh`, {
                    method: 'POST'
                });

                if (response.ok) {
                    showAvatarSet(setId);
                    alert('头像套装已刷新！');
                } else {
                    const error = await response.json();
                    alert('刷新失败: ' + error.error);
                }
            } catch (error) {
                console.error('刷新头像套装失败:', error);
                alert('刷新失败，请重试');
            }
        }
    </script>
</body>
</html>