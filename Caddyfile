# Traditional Chinese Study Application - Caddy Configuration
# This configuration sets up Caddy as a reverse proxy for the application

# Global options
{
    # Enable admin API on localhost only for security
    admin localhost:2019
    
    # Enable automatic HTTPS
    auto_https on
    
    # Email for Let's Encrypt (replace with your email)
    email admin@example.com
    
    # Enable HTTP/3 support
    servers {
        protocol {
            experimental_http3
        }
    }
    
    # Security headers
    header {
        # Remove server information
        -Server
        
        # Security headers
        X-Content-Type-Options nosniff
        X-Frame-Options DENY
        X-XSS-Protection "1; mode=block"
        Referrer-Policy "strict-origin-when-cross-origin"
        Permissions-Policy "geolocation=(), microphone=(), camera=()"
        
        # HSTS (HTTP Strict Transport Security)
        Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
    }
}

# Development configuration (localhost)
localhost:80, localhost:443 {
    # Enable logging
    log {
        output file /var/log/caddy/access.log {
            roll_size 100mb
            roll_keep 5
            roll_keep_for 720h
        }
        format json
        level INFO
    }
    
    # Error handling
    handle_errors {
        @404 expression {http.error.status_code} == 404
        handle @404 {
            rewrite * /404.html
            file_server
        }
        
        @5xx expression {http.error.status_code} >= 500
        handle @5xx {
            respond "服务器内部错误，请稍后重试" 500
        }
    }
    
    # Static assets (Next.js build output)
    handle /static/* {
        root * /app/.next/static
        file_server {
            precompressed gzip br
        }
        header Cache-Control "public, max-age=31536000, immutable"
    }
    
    # Next.js assets
    handle /_next/* {
        reverse_proxy localhost:3000 {
            header_up Host {host}
            header_up X-Real-IP {remote}
            header_up X-Forwarded-For {remote}
            header_up X-Forwarded-Proto {scheme}
        }
        header Cache-Control "public, max-age=31536000, immutable"
    }
    
    # API routes (Express backend)
    handle /api/* {
        reverse_proxy localhost:9005 {
            header_up Host {host}
            header_up X-Real-IP {remote}
            header_up X-Forwarded-For {remote}
            header_up X-Forwarded-Proto {scheme}
            
            # Health check
            health_uri /ping
            health_interval 30s
            health_timeout 5s
        }
    }
    
    # Authentication routes
    handle /auth/* {
        reverse_proxy localhost:9005 {
            header_up Host {host}
            header_up X-Real-IP {remote}
            header_up X-Forwarded-For {remote}
            header_up X-Forwarded-Proto {scheme}
        }
    }
    
    # Admin routes
    handle /admin/* {
        reverse_proxy localhost:9005 {
            header_up Host {host}
            header_up X-Real-IP {remote}
            header_up X-Forwarded-For {remote}
            header_up X-Forwarded-Proto {scheme}
        }
    }
    
    # Legacy routes (for backward compatibility)
    handle /classics/* {
        redir /classics{uri} permanent
    }
    
    handle /reader/* {
        redir /classics{uri} permanent
    }
    
    # Health check endpoint
    handle /health {
        respond "OK" 200
    }
    
    # Robots.txt
    handle /robots.txt {
        respond `User-agent: *
Allow: /
Disallow: /admin/
Disallow: /api/
Sitemap: https://{host}/sitemap.xml`
    }
    
    # All other routes go to Next.js
    handle {
        reverse_proxy localhost:3000 {
            header_up Host {host}
            header_up X-Real-IP {remote}
            header_up X-Forwarded-For {remote}
            header_up X-Forwarded-Proto {scheme}
            
            # Health check for Next.js
            health_uri /
            health_interval 30s
            health_timeout 10s
        }
    }
}

# Production configuration (replace with your domain)
# your-domain.com, www.your-domain.com {
#     # Redirect www to non-www
#     @www host www.your-domain.com
#     redir @www https://your-domain.com{uri} permanent
#     
#     # Enable logging
#     log {
#         output file /var/log/caddy/production.log {
#             roll_size 100mb
#             roll_keep 10
#             roll_keep_for 2160h
#         }
#         format json
#         level INFO
#     }
#     
#     # Rate limiting
#     rate_limit {
#         zone static {
#             key {remote_host}
#             events 100
#             window 1m
#         }
#         zone api {
#             key {remote_host}
#             events 30
#             window 1m
#         }
#     }
#     
#     # Apply rate limiting to API routes
#     handle /api/* {
#         rate_limit api
#         reverse_proxy localhost:9005 {
#             header_up Host {host}
#             header_up X-Real-IP {remote}
#             header_up X-Forwarded-For {remote}
#             header_up X-Forwarded-Proto {scheme}
#         }
#     }
#     
#     # Static content with compression and caching
#     handle /static/* {
#         rate_limit static
#         root * /app/.next/static
#         file_server {
#             precompressed gzip br
#         }
#         header Cache-Control "public, max-age=31536000, immutable"
#         header Vary "Accept-Encoding"
#     }
#     
#     # All other routes
#     handle {
#         rate_limit static
#         reverse_proxy localhost:3000 {
#             header_up Host {host}
#             header_up X-Real-IP {remote}
#             header_up X-Forwarded-For {remote}
#             header_up X-Forwarded-Proto {scheme}
#         }
#     }
# }

# Metrics endpoint (for monitoring)
:2020 {
    bind 127.0.0.1
    metrics /metrics
}
